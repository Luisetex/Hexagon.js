{"version":3,"sources":["node_modules/auto-reload-brunch/vendor/auto-reload.js","app/Hexagon.js","app/src/Cursor.js","app/src/Rays.js","app/src/RegularPolygon.js","app/src/Timer.js","app/src/Utils.js","app/src/Wall.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;CCxDA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArOA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5DA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxCA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxpEA;AAAA","file":"public\\app.js","sourcesContent":["/* jshint ignore:start */\n(function() {\n  var WebSocket = window.WebSocket || window.MozWebSocket;\n  var br = window.brunch = (window.brunch || {});\n  var ar = br['auto-reload'] = (br['auto-reload'] || {});\n  if (!WebSocket || ar.disabled) return;\n\n  var cacheBuster = function(url){\n    var date = Math.round(Date.now() / 1000).toString();\n    url = url.replace(/(\\&|\\\\?)cacheBuster=\\d*/, '');\n    return url + (url.indexOf('?') >= 0 ? '&' : '?') +'cacheBuster=' + date;\n  };\n\n  var browser = navigator.userAgent.toLowerCase();\n  var forceRepaint = ar.forceRepaint || browser.indexOf('chrome') > -1;\n\n  var reloaders = {\n    page: function(){\n      window.location.reload(true);\n    },\n\n    stylesheet: function(){\n      [].slice\n        .call(document.querySelectorAll('link[rel=stylesheet]'))\n        .filter(function(link) {\n          var val = link.getAttribute('data-autoreload');\n          return link.href && val != 'false';\n        })\n        .forEach(function(link) {\n          link.href = cacheBuster(link.href);\n        });\n\n      // Hack to force page repaint after 25ms.\n      if (forceRepaint) setTimeout(function() { document.body.offsetHeight; }, 25);\n    }\n  };\n  var port = ar.port || 9485;\n  var host = br.server || window.location.hostname || 'localhost';\n\n  var connect = function(){\n    var connection = new WebSocket('ws://' + host + ':' + port);\n    connection.onmessage = function(event){\n      if (ar.disabled) return;\n      var message = event.data;\n      var reloader = reloaders[message] || reloaders.page;\n      reloader();\n    };\n    connection.onerror = function(){\n      if (connection.readyState) connection.close();\n    };\n    connection.onclose = function(){\n      window.setTimeout(connect, 1000);\n    };\n  };\n  connect();\n})();\n/* jshint ignore:end */","\"use strict\";\r\n\r\nvar Utils \t\t\t= require('src/Utils');\r\nvar RegularPolygon \t= require('src/RegularPolygon');\r\nvar Rays \t\t\t= require('src/Rays');\r\nvar Wall \t\t\t= require('src/Wall');\r\nvar Cursor \t\t\t= require('src/Cursor');\r\nvar Timer \t\t\t= require('src/Timer');\r\n\r\nvar Hexagon;\r\n\r\nmodule.exports = Hexagon = (function() {\r\n\tfunction Hexagon(args) {\r\n\t\tif (typeof args === 'undefined')\r\n\t\t\tthrow new Error(\"No args provided\");\r\n\t\tif (typeof args.canvas === 'undefined')\r\n\t\t\tthrow new Error(\"No canvas provided\");\r\n\r\n\t\tthis.args \t\t\t\t= args;\r\n\r\n\t\tthis.canvas \t\t\t= args.canvas;\r\n\t\tthis.ctx \t\t\t\t= this.canvas.getContext('2d');\r\n\t\tthis.angleSpeed \t\t= typeof args.angleSpeed === 'number' ? args.angleSpeed : 2;\r\n\t\tthis.walls \t\t\t\t= [null, null, null, null];\r\n\t\tthis.wallColors \t\t= args.wallColors || [\"#1EAAA5\", \"#4EFC96\"];\r\n\t\tthis.currentWallColor \t= this.wallColors[0];\r\n\t\tthis.backgroundColors \t= args.backgroundColors || [\"#0A2727\", \"#103D3D\"];\r\n\t\tthis.rays \t\t\t\t= new Rays({\r\n\t\t\t\t\t\t\t\t\tamount: 6\r\n\t\t\t\t\t\t\t\t});\r\n\t\tthis.hexagon \t\t\t= new RegularPolygon({\r\n\t\t\t\t\t\t\t\t\tcanvas: this.canvas,\r\n\t\t\t\t\t\t\t\t\tsides: 6,\r\n\t\t\t\t\t\t\t\t\tsize: 1000\r\n\t\t\t\t\t\t\t\t});\r\n\t\tthis.cursor \t\t\t= new Cursor({\r\n\t\t\t\t\t\t\t\t\tcanvas: this.canvas,\r\n\t\t\t\t\t\t\t\t\tsize: 7,\r\n\t\t\t\t\t\t\t\t\tcolor: this.wallColors[0],\r\n\t\t\t\t\t\t\t\t\tstrokeColor: \"rgba(0,0,0,0)\",\r\n\t\t\t\t\t\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\t\t\t\t\t\tradius: 75,\r\n\t\t\t\t\t\t\t\t\tspeed: args.cursorSpeed || 5\r\n\t\t\t\t\t\t\t\t});\r\n\t\tthis.wallSpeed \t\t\t= args.wallSpeed || 2;\r\n\t\tthis.minDist \t\t\t= Math.sqrt(\r\n\t\t\t\t\t\t\t\t\tMath.pow(this.canvas.width, 2) +\r\n\t\t\t\t\t\t\t\t\tMath.pow(this.canvas.height, 2)\r\n\t\t\t\t\t\t\t\t) / 2;\r\n\t\tthis.timer \t\t\t\t= new Timer().init(this.wallColors, \"timing.JSON\");\r\n\r\n\t\tvar _animation_id_,\r\n\t\t\t_frameCount = 0,\r\n\t\t\t_isDead = false,\r\n\t\t\tCOLOR_DARK = 0, COLOR_LIGHT = 1;\r\n\r\n\t\tfor (var i = 0; i < this.walls.length; i++) {\r\n\t\t\tthis.walls[i] = new Wall({\r\n\t\t\t\tdistance: this.minDist + ((this.minDist / 3) * (i + 1))\r\n\t\t\t});\r\n\t\t\tthis.walls[i].generatePattern(6);\r\n\t\t};\r\n\r\n\t\tthis.init = function() {\r\n\t\t\tthis.angleSpeed = typeof args.angleSpeed === 'number' ? args.angleSpeed : 2;\r\n\t\t\tif (Math.floor(Date.now()) % 2 == 0)\r\n\t\t\t\tthis.angleSpeed *= -1;\r\n\t\t\tthis.wallSpeed = args.wallSpeed || 2;\r\n\t\t\tthis.cursor.size = 7;\r\n\t\t\tthis.timer.currentLevel = 0;\r\n\t\t\tthis.timer.levelText.innerHTML = \"POINT\";\r\n\t\t\t_frameCount = 0;\r\n\r\n\t\t\treturn this;\r\n\t\t};\r\n\r\n\t\tthis.play = function() {\r\n\t\t\tvar _this = this;\r\n\t\t\t_isDead = false;\r\n\t\t\tdocument.onkeydown = function(event) {\r\n\t\t\t\tvar key = event.which || event.keyCode;\r\n\t\t\t\tif (key == 27)\r\n\t\t\t\t\t_isDead = true;\r\n\t\t\t\t_this.moveCursor(event);\r\n\t\t\t};\r\n\t\t\tdocument.onkeyup = function(event) {\r\n\t\t\t\t_this.stopCursor(event);\r\n\t\t\t}\r\n\t\t\t_animation_id_ = requestAnimationFrame(_update.bind(this))\r\n\t\t};\r\n\r\n\t\tthis.moveCursor = function(event) {\r\n\t\t\tvar key = event.which || event.keyCode;\r\n\t\t\tif (key == 39)\r\n\t\t\t\tthis.cursor.dir = 1;\r\n\t\t\telse if (key == 37)\r\n\t\t\t\tthis.cursor.dir = -1;\r\n\t\t}\r\n\r\n\t\tthis.stopCursor = function(event) {\r\n\t\t\tvar key = event.which || event.keyCode;\r\n\t\t\tif ((key == 39 && this.cursor.dir == 1) || (key == 37 && this.cursor.dir == -1))\r\n\t\t\t\tthis.cursor.dir = 0;\r\n\t\t}\r\n\r\n\t\tthis.die = function() {\r\n\t\t\tthis.hexagon.draw(this.canvas, this.backgroundColors[COLOR_DARK], this.currentWallColor, 7);\r\n\t\t\tthis.cursor.draw();\r\n\t\t\tthis.cursor.dir = 0;\r\n\t\t\tdocument.onkeydown = null;\r\n\t\t\tdocument.onkeyup = null;\r\n\t\t\t_frameCount = 0;\r\n\t\t\t_animation_id_ = requestAnimationFrame(_dead.bind(this));\r\n\t\t};\r\n\r\n\t\tvar _update = function() {\r\n\t\t\tvar _fc_acc = (_frameCount % 120) <= 60 ? (_frameCount % 120) : 60 - ((_frameCount % 120) - 60);\r\n\t\t\tthis.currentWallColor = Utils.interpolateColor(\r\n\t\t\t\tthis.wallColors[0],\r\n\t\t\t\tthis.wallColors[1],\r\n\t\t\t\t60,\r\n\t\t\t\t_fc_acc\r\n\t\t\t);\r\n\r\n\t\t\tif ((_frameCount % (5* 60) == 0) && (Math.floor(Math.random() * 100)) < 5)\r\n\t\t\t\tthis.angleSpeed *= -1;\r\n\r\n\t\t\tthis.ctx.fillStyle = this.backgroundColors[COLOR_DARK];\r\n\t\t\tthis.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n\t\t\tthis.ctx.translate(this.canvas.width / 2, this.canvas.height / 2);\r\n\t\t\tthis.ctx.rotate(this.angleSpeed * Math.PI / 180);\r\n\t\t\tthis.ctx.translate(- this.canvas.width / 2, - this.canvas.height / 2);\r\n\t\t\tthis.rays.draw(this.canvas, [this.backgroundColors[COLOR_DARK], this.backgroundColors[COLOR_LIGHT]]);\r\n\t\t\tfor (var i = 0; i < this.walls.length; i++) {\r\n\t\t\t\tthis.walls[i].draw(this.canvas, this.currentWallColor);\r\n\t\t\t\tthis.walls[i].distance -= this.wallSpeed;\r\n\t\t\t\tif (this.walls[i].distance <= 0) {\r\n\t\t\t\t\tthis.walls[i].distance = this.minDist + (this.minDist / 3);\r\n\t\t\t\t\tthis.walls[i].generatePattern(6);\r\n\t\t\t\t}\r\n\t\t\t\tif (this.walls[i].checkCollision(this.cursor.getCoord(), this.canvas))\r\n\t\t\t\t\t_isDead = true;\r\n\t\t\t}\r\n\t\t\tthis.cursor.color = this.currentWallColor;\r\n\t\t\tthis.cursor.draw();\r\n\t\t\tif (this.cursor.radius > 75)\r\n\t\t\t\tthis.cursor.radius -= 25;\r\n\t\t\tif (this.cursor.size > 7)\r\n\t\t\t\tthis.cursor.size -= 1;\r\n\t\t\tthis.hexagon.draw(this.backgroundColors[COLOR_DARK], this.currentWallColor, 7);\r\n\t\t\tif (this.hexagon.size > 50)\r\n\t\t\t\tthis.hexagon.size -= 25;\r\n\t\t\tthis.timer.update(_frameCount);\r\n\r\n\t\t\tif (_isDead)\r\n\t\t\t\treturn this.die();\r\n\r\n\t\t\t_frameCount++;\r\n\t\t\t_animation_id_ = requestAnimationFrame(_update.bind(this));\r\n\t\t};\r\n\r\n\t\tvar _dead = function() {\r\n\t\t\tif (this.angleSpeed > .4) {\r\n\t\t\t\tthis.angleSpeed -= .01;\r\n\t\t\t\tif (this.angleSpeed < .4)\r\n\t\t\t\t\tthis.angleSpeed = .4;\r\n\t\t\t}\r\n\t\t\telse if (this.angleSpeed < -.4) {\r\n\t\t\t\tthis.angleSpeed += .01;\r\n\t\t\t\tif (this.angleSpeed > -.4)\r\n\t\t\t\t\tthis.angleSpeed = -.4;\r\n\t\t\t}\r\n\t\t\tif (this.wallSpeed > 0)\r\n\t\t\t\tthis.wallSpeed = 0;\r\n\r\n\t\t\tif (_frameCount == (.5 * 60))\r\n\t\t\t\tthis.wallSpeed = -50;\r\n\t\t\tif (_frameCount >= (.8 * 60) && this.hexagon.size < 250) {\r\n\t\t\t\tthis.hexagon.size += 50;\r\n\t\t\t\tthis.cursor.radius += 50;\r\n\t\t\t\tthis.cursor.size += 1;\r\n\t\t\t}\r\n\t\t\tif (this.hexagon.size >= 250) {\r\n\t\t\t\tvar _this = this;\r\n\t\t\t\tcancelAnimationFrame(_animation_id_);\r\n\t\t\t\twindow.onkeydown = function(event) {\r\n\t\t\t\t\tvar key = event.which || event.keyCode;\r\n\t\t\t\t\tif (key == 32 || key == 38) {\r\n\t\t\t\t\t\tfor (var i = 0; i < _this.walls.length; i++) {\r\n\t\t\t\t\t\t\t_this.walls[i] = new Wall({\r\n\t\t\t\t\t\t\t\tdistance: _this.minDist + ((_this.minDist / 3) * (i + 1))\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t_this.walls[i].generatePattern(6);\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\twindow.onkeydown = null;\r\n\t\t\t\t\t\tcancelAnimationFrame(_animation_id_);\r\n\t\t\t\t\t\t_this.init().play();\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t};\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tthis.ctx.fillStyle = this.backgroundColors[COLOR_DARK];\r\n\t\t\tthis.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n\t\t\tthis.ctx.translate(this.canvas.width / 2, this.canvas.height / 2);\r\n\t\t\tthis.ctx.rotate(this.angleSpeed * Math.PI / 180);\r\n\t\t\tthis.ctx.translate(- this.canvas.width / 2, - this.canvas.height / 2);\r\n\t\t\tthis.rays.draw(this.canvas, [this.backgroundColors[COLOR_DARK], this.backgroundColors[COLOR_LIGHT]]);\r\n\t\t\tfor (var i = 0; i < this.walls.length; i++) {\r\n\t\t\t\tthis.walls[i].draw(this.canvas, this.currentWallColor);\r\n\t\t\t\tthis.walls[i].distance -= this.wallSpeed;\r\n\t\t\t\tif (this.walls[i].distance <= 0) {\r\n\t\t\t\t\tthis.walls[i].distance = this.minDist + (this.minDist / 3);\r\n\t\t\t\t\tthis.walls[i].generatePattern(6);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.cursor.color = _frameCount % 6 < 3 ? this.wallColors[0] : this.wallColors[1];\r\n\t\t\tthis.cursor.draw();\r\n\t\t\tthis.hexagon.draw(this.backgroundColors[COLOR_DARK], this.currentWallColor, 7);\r\n\r\n\t\t\t_frameCount++;\r\n\t\t\t_animation_id_ = requestAnimationFrame(_dead.bind(this));\r\n\t\t};\r\n\r\n\t\treturn this;\r\n\t};\r\n\r\n\treturn Hexagon;\r\n}());\r\n","\"use strict\";\r\n\r\nvar Cursor;\r\n\r\nmodule.exports = Cursor = (function() {\r\n\tfunction Cursor(args) {\r\n\t\tthis.canvas = args.canvas || {};\r\n\t\tthis.color = args.color || \"#fff\";\r\n\t\tthis.strokeColor = args.strokeColor || \"#000\";\r\n\t\tthis.strokeWidth = args.strokeWidth || 0;\r\n\t\tthis.size = args.size || 5;\r\n\t\tthis.radius = args.radius || 50;\r\n\t\tthis.speed = args.speed || 4;\r\n\t\tthis.dir = 0;\r\n\t\tthis.angle = 30;\r\n\r\n\t\tthis.draw = function() {\r\n\t\t\tvar ctx = this.canvas.getContext('2d'),\r\n\t\t\tc_x = (this.canvas.width / 2) + (this.radius * Math.cos(this.angle * Math.PI / 180)),\r\n\t\t\tc_y = (this.canvas.height / 2) + (this.radius * Math.sin(this.angle * Math.PI / 180));\r\n\r\n\t\t\tthis.angle = this.angle + (this.dir * this.speed);\r\n\t\t\tif (this.angle < 0)\r\n\t\t\t\tthis.angle = 360 - this.angle;\r\n\t\t\telse if (this.angle > 360)\r\n\t\t\t\tthis.angle %= 360;\r\n\t\t\tctx.translate(c_x, c_y);\r\n\t\t\tctx.rotate(this.angle * Math.PI / 180);\r\n\t\t\tctx.translate(- c_x, - c_y);\r\n\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(c_x - this.size, c_y - this.size);\r\n\t\t\tctx.lineTo(c_x + this.size, c_y);\r\n\t\t\tctx.lineTo(c_x - this.size, c_y + this.size);\r\n\t\t\tctx.closePath();\r\n\r\n\t\t\tctx.fillStyle = this.color;\r\n\t\t\tctx.strokeStyle = this.strokeColor;\r\n\t\t\tctx.lineWidth = this.strokeWidth;\r\n\t\t\tctx.stroke();\r\n\t\t\tctx.fill();\r\n\r\n\t\t\tctx.translate(c_x, c_y);\r\n\t\t\tctx.rotate(- this.angle * Math.PI / 180);\r\n\t\t\tctx.translate(- c_x, - c_y);\r\n\t\t};\r\n\r\n\t\tthis.getCoord = function() {\r\n\t\t\tvar ctx = this.canvas.getContext('2d'),\r\n\t\t\tc_x = (this.canvas.width / 2) + (this.radius * Math.cos(this.angle * Math.PI / 180)),\r\n\t\t\tc_y = (this.canvas.height / 2) + (this.radius * Math.sin(this.angle * Math.PI / 180));\r\n\r\n\t\t\treturn {\r\n\t\t\t\ta: this.angle,\r\n\t\t\t\td: this.radius + (this.size * 2),\r\n\t\t\t};\r\n\t\t};\r\n\t};\r\n\treturn Cursor;\r\n}());\r\n","\"use strict\";\r\n\r\nvar Rays;\r\n\r\nmodule.exports = Rays = (function() {\r\n\tfunction Rays(args) {\r\n\t\tthis.amount = typeof args.amount !== 'undefined' ? args.amount : 3;\r\n\r\n\t\tthis.draw = function(canvas, colors) {\r\n\t\t\tvar ctx = canvas.getContext('2d'),\r\n\t\t\tcx = canvas.width / 2,\r\n\t\t\tcy = canvas.height / 2,\r\n\t\t\tsz = canvas.width > canvas.height ? canvas.width : canvas.height;\r\n\r\n\t\t\tfor (var i = 1; i <= this.amount; i++) {\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tctx.moveTo(cx, cy);\r\n\t\t\t\tctx.lineTo(cx + sz * Math.cos(i * 2 * Math.PI / this.amount), cy + sz * Math.sin(i * 2 * Math.PI / this.amount));\r\n\t\t\t\tctx.lineTo(cx + sz * Math.cos((i+1)%this.amount * 2 * Math.PI / this.amount), cy + sz * Math.sin((i+1)%this.amount * 2 * Math.PI / this.amount));\r\n\t\t\t\tctx.fillStyle = colors[i % 2];\r\n\t\t\t\tctx.fill();\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\treturn Rays;\r\n}());\r\n","\"use strict\";\r\n\r\nvar RegularPolygon;\r\n\r\nmodule.exports = RegularPolygon = (function() {\r\n\tfunction RegularPolygon(args) {\r\n\t\tif (typeof args === \"undefined\")\r\n\t\t\tthrow new Error('RegularPolygon: No args provided');\r\n\t\tif (typeof args.canvas === 'undefined')\r\n\t\t\tthrow new Error('RegularPolygon: No target canvas provided');\r\n\t\tif (typeof args.sides !== 'undefined' && args.sides < 3)\r\n\t\t\tthrow new Error('RegularPolygon: Sides cannot be less than 3');\r\n\r\n\t\tthis.sides = args.sides\t\t|| 3,\r\n\t\tthis.size = args.size\t\t|| 10,\r\n\t\tthis.canvas = args.canvas\t|| {};\r\n\r\n\t\tthis.draw = function(fillColor, strokeColor, strokeWidth) {\r\n\t\t\tvar ctx\t= this.canvas.getContext('2d'),\r\n\t\t\tcx \t= this.canvas.width / 2 || 0,\r\n\t\t\tcy \t= this.canvas.height / 2 || 0;\r\n\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(cx + this.size * Math.cos(0), cy + this.size *  Math.sin(0));\r\n\t\t\tfor (var i = 1; i <= this.sides; i++) {\r\n\t\t\t\tctx.lineTo(cx + this.size * Math.cos(i * 2 * Math.PI / this.sides), cy + this.size * Math.sin(i * 2 * Math.PI / this.sides));\r\n\t\t\t};\r\n\r\n\t\t\tctx.fillStyle = fillColor;\r\n\t\t\tctx.strokeStyle = strokeColor;\r\n\t\t\tctx.lineCap = \"round\";\r\n\t\t\tctx.lineWidth = strokeWidth;\r\n\t\t\tctx.fill();\r\n\t\t\tctx.stroke();\r\n\t\t};\r\n\r\n\t};\r\n\t\r\n\treturn RegularPolygon;\r\n}());\r\n","\"use strict\";\r\n\r\nvar Utils\t= require('src/Utils');\r\n\r\nvar Timer;\r\n\r\nmodule.exports = Timer = (function() {\r\n\tfunction Timer(args) {\r\n\t\tthis.currentLevel = 0;\r\n\t\tthis.levelTimings = [10, 20, 30, 45, 60];\r\n\t\tthis.levelTexts = [\"POINT\", \"LINE\", \"TRIANGLE\", \"SQUARE\", \"PENTAGON\", \"HEXAGON\"];\r\n\t\tthis.element;\r\n\t\tthis.timeText;\r\n\t\tthis.label;\r\n\t\tthis.level;\r\n\t\tthis.levelText;\r\n\t\tthis.levelProgressContainer;\r\n\t\tthis.levelProgress;\r\n\r\n\t\tthis.load = function(url) {\r\n\t\t\tvar _this = this;\r\n\t\t\tvar data = Utils.getJSON(url, function(data) {\r\n\t\t\t\tif (typeof data === 'undefined') {\r\n\t\t\t\t\tconsole.error(\"HexagonJS @ \" + url + \": Can't get data.\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (typeof data.levels === 'undefined') {\r\n\t\t\t\t\tconsole.error(\"HexagonJS @ \" + url + \": \\\"levels\\\" object not found.\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (typeof data.levels.timings === 'undefined' ||\r\n\t\t\t\t\ttypeof data.levels.texts === 'undefined') {\r\n\t\t\t\t\tconsole.error(\"HexagonJS @ \" + url + \": Missing \\\"timings\\\" or \\\"texts\\\" arrays.\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (data.levels.timings.length != data.levels.texts.length - 1) {\r\n\t\t\t\t\tconsole.error(\"HexagonJS @ \" + url + \": Level timings represent the end of each level. There should be one less timings than level names since the last level lasts forever.\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis.levelTimings = data.levels.timings;\r\n\t\t\t\tthis.levelTexts = data.levels.texts;\r\n\t\t\t\tthis.levelText.innerHTML = this.levelTexts[0];\r\n\t\t\t}.bind(this));\r\n\t\t};\r\n\r\n\t\tthis.init = function(colors, url) {\r\n\t\t\tif (typeof url === 'string')\r\n\t\t\t\tthis.load(url);\r\n\r\n\t\t\tthis.element = document.createElement('div');\r\n\t\t\tthis.element.classList.add('hjs');\r\n\t\t\tthis.element.classList.add('timer');\r\n\t\t\tdocument.getElementsByTagName('body')[0].appendChild(this.element);\r\n\r\n\t\t\tthis.timeText = document.createElement('span');\r\n\t\t\tthis.element.appendChild(this.timeText);\r\n\r\n\t\t\tthis.label = document.createElement('div');\r\n\t\t\tthis.label.classList.add('hjs');\r\n\t\t\tthis.label.classList.add('label');\r\n\t\t\tthis.label.innerHTML = \"TIME\";\r\n\t\t\tthis.element.appendChild(this.label);\r\n\r\n\t\t\tthis.level = document.createElement('div');\r\n\t\t\tthis.level.classList.add('hjs');\r\n\t\t\tthis.level.classList.add('level');\r\n\t\t\tdocument.getElementsByTagName('body')[0].appendChild(this.level);\r\n\r\n\t\t\tthis.levelText = document.createElement('span');\r\n\t\t\tthis.levelText.innerHTML = this.levelTexts[0];\r\n\t\t\tthis.level.appendChild(this.levelText);\r\n\r\n\t\t\tthis.levelProgressContainer = document.createElement('div');\r\n\t\t\tthis.level.appendChild(this.levelProgressContainer);\r\n\r\n\t\t\tthis.levelProgress = document.createElement('div');\r\n\t\t\tthis.levelProgress.style.backgroundColor = colors[1];\r\n\t\t\tthis.levelProgressContainer.appendChild(this.levelProgress);\r\n\t\t\treturn this;\r\n\t\t};\r\n\r\n\t\tthis.update = function(_frameCount) {\r\n\t\t\tvar seconds = Math.floor(_frameCount / 60);\r\n\t\t\tvar dec = Math.floor(_frameCount - (seconds * 60));\r\n\t\t\tdec = ('0' + dec).slice(-2);\r\n\t\t\tthis.timeText.innerHTML = seconds + ':' + dec;\r\n\r\n\t\t\tvar percent = (_frameCount / (this.levelTimings[this.currentLevel] * 60)) * 100;\r\n\t\t\tif (this.currentLevel > 0)\r\n\t\t\t\tpercent = ((_frameCount - (this.levelTimings[this.currentLevel - 1] * 60)) / ((this.levelTimings[this.currentLevel] * 60) - (this.levelTimings[this.currentLevel - 1] * 60))) * 100;\r\n\t\t\tpercent %= 100;\r\n\t\t\tthis.levelProgress.style.width = percent + '%';\r\n\r\n\t\t\tfor (var i = 0; i < this.levelTimings.length; i++) {\r\n\t\t\t\tif (seconds == this.levelTimings[i] && this.currentLevel == i) {\r\n\t\t\t\t\tthis.currentLevel++;\r\n\t\t\t\t\tthis.levelText.innerHTML = this.levelTexts[this.currentLevel];\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t};\r\n\t};\r\n\r\n\treturn Timer;\r\n}());\r\n","\"use strict\";\r\n\r\nvar Utils = {\r\n\tinterpolateColor: function interpolateColor(minColor, maxColor, maxDepth, depth) {\r\n\t\tfunction d2h(d) {return d.toString(16);}\r\n\t\tfunction h2d(h) {return parseInt(h,16);}\r\n\r\n\t\tif (depth == 0)\r\n\t\t\treturn minColor;\r\n\t\tif (depth == maxDepth)\r\n\t\t\treturn maxColor;\r\n\r\n\t\tvar color = \"#\";\r\n\t\tfor (var i = 1; i <= 6; i += 2) {\r\n\t\t\tvar minVal = new Number(h2d(minColor.substr(i,2)));\r\n\t\t\tvar maxVal = new Number(h2d(maxColor.substr(i,2)));\r\n\t\t\tvar nVal = minVal + (maxVal - minVal) * (depth / maxDepth);\r\n\t\t\tvar val = d2h(Math.floor(nVal));\r\n\t\t\twhile(val.length < 2){\r\n\t\t\t\tval = \"0\"+val;\r\n\t\t\t}\r\n\t\t\tcolor += val;\r\n\t\t};\r\n\t\treturn color;\r\n\t},\r\n\tgetJSON: function getJSON(url, callback) {\r\n\t\tvar xhr = typeof XMLHttpRequest != 'undefined'\r\n\t\t? new XMLHttpRequest()\r\n\t\t: new ActiveXObject('Microsoft.XMLHTTP');\r\n\t\txhr.open('get', url, true);\r\n\t\txhr.onreadystatechange = function() {\r\n\t\t\tvar status, data;\r\n\t\t\tif (xhr.readyState == 4) {\r\n\t\t\t\tstatus = xhr.status;\r\n\t\t\t\tif (status == 200) {\r\n\t\t\t\t\tdata = JSON.parse(xhr.responseText);\r\n\t\t\t\t\tcallback && callback(data);\r\n\t\t\t\t} else\r\n\t\t\t\t\tconsole.error(\"Error: \" + status);\r\n\t\t\t}\r\n\t\t};\r\n\t\txhr.send();\r\n\t}\r\n};\r\n\r\nmodule.exports = Utils;\r\n","\"use strict\";\r\n\r\nvar Wall;\r\n\r\nmodule.exports = Wall = (function() {\r\n\tfunction Wall(args) {\r\n\t\tthis.walls = [false, false, false, false, false, false];\r\n\t\tthis.distance = args.distance || 250;\r\n\t\tthis.width = args.width || 50;\r\n\r\n\t\tvar _checkValid = function(walls) {\r\n\t\t\tfor (var i = 0; i < walls.length; i++) {\r\n\t\t\t\tif (walls[i] == false)\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tthis.generatePattern = function(amount) {\r\n\t\t\tfor (var i = 0; i < amount; i++)\r\n\t\t\t\tthis.walls[i] = Boolean(Math.round(Math.random()));\r\n\t\t\tif (!_checkValid(this.walls))\r\n\t\t\t\tthis.generatePattern(amount);\r\n\t\t};\r\n\r\n\t\tthis.draw = function(canvas, color) {\r\n\t\t\tvar ctx = canvas.getContext('2d');\r\n\t\t\tvar cx = canvas.width / 2,\r\n\t\t\tcy = canvas.height / 2;\r\n\r\n\t\t\tfor (var i = 0; i < this.walls.length; i++) {\r\n\t\t\t\tif (!this.walls[i])\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tctx.moveTo(cx + this.distance * Math.cos(i * 2 * Math.PI / 6), cy + this.distance * Math.sin(i * 2 * Math.PI / 6));\r\n\t\t\t\tctx.lineTo(cx + this.distance * Math.cos((i + 1) * 2 * Math.PI / 6), cy + this.distance * Math.sin((i + 1) * 2 * Math.PI / 6));\r\n\t\t\t\tctx.lineTo(cx + (this.distance - this.width) * Math.cos((i + 1) * 2 * Math.PI / 6), cy + (this.distance - this.width) * Math.sin((i + 1) * 2 * Math.PI / 6));\r\n\t\t\t\tctx.lineTo(cx + (this.distance - this.width) * Math.cos(i * 2 * Math.PI / 6), cy + (this.distance - this.width) * Math.sin(i * 2 * Math.PI / 6));\r\n\t\t\t\tctx.closePath();\r\n\r\n\t\t\t\tctx.fillStyle = color;\r\n\t\t\t\tctx.strokeStyle = color;\r\n\t\t\t\tctx.lineWidth = 1;\r\n\t\t\t\tctx.fill();\r\n\t\t\t\tctx.stroke();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.checkCollision = function(coord, canvas) {\r\n\t\t\tfor (var i = 0; i < this.walls.length; i++) {\r\n\t\t\t\tvar a_1 = i * (360 / 6),\r\n\t\t\t\ta_2 = (i + 1) * (360 / 6);\r\n\t\t\t\tif (!this.walls[i])\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tif (a_1 <= coord.a && a_2 >= coord.a) {\r\n\t\t\t\t\tif ((this.distance - this.width) <= coord.d &&\r\n\t\t\t\t\t\tthis.distance >= coord.d)\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\treturn false;\r\n\t\t};\r\n\t};\r\n\r\n\treturn Wall;\r\n}());\r\n"]}