{"version":3,"sources":["app/Hexagon.js","app/src/Cursor.js","app/src/Kiloton.js","app/src/Rays.js","app/src/RegularPolygon.js","app/src/Timer.js","app/src/Utils.js","app/src/Wall.js"],"names":[],"mappingsnZA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvxvIA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArDA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjFA;AAAA","file":"public\\hexagon.js","sourcesContent":["\"use strict\";\r\n\r\nvar Utils \t\t\t     = require('src/Utils');\r\nvar RegularPolygon \t = require('src/RegularPolygon');\r\nvar Rays \t\t\t       = require('src/Rays');\r\nvar Wall \t\t\t       = require('src/Wall');\r\nvar Cursor \t\t\t     = require('src/Cursor');\r\nvar Timer \t\t\t     = require('src/Timer');\r\nvar Kiloton\t\t\t     = require('src/Kiloton');\r\n\r\nvar Hexagon;\r\n\r\nmodule.exports = Hexagon = (function() {\r\n\tfunction Hexagon(args) {\r\n\t\tif (typeof args === 'undefined')\r\n\t\tthrow new Error(\"No args provided\");\r\n\t\tif (typeof args.canvas === 'undefined')\r\n\t\tthrow new Error(\"No canvas provided\");\r\n\r\n\t\t/* JS args */\r\n\t\tthis.args = args;\r\n\t\tthis.canvas = args.canvas;\r\n\t\tthis.ctx = this.canvas.getContext('2d');\r\n\r\n\t\t/* JSON config */\r\n\t\tthis.angleSpeed = 1.2;\r\n\t\tthis.backgroundColors = [[\"#000000\", \"#000000\"], [\"#000000\", \"#000000\"]];\r\n\t\tvar _backgroundColors = this.backgroundColors;\r\n\t\tthis.wallColors = [\"#FFFFFF\", \"#FFFFFF\"];\r\n\t\tvar _wallColors = this.wallColors;\r\n\t\tthis.wallSpeed = 5;\r\n\t\tthis.rotationChance = 5;\r\n\t\tthis.rotationFrequency = 5;\r\n\r\n\t\t/* Other members */\r\n\t\tthis.walls = [null, null, null, null];\r\n\t\tthis.currentWallColor = this.wallColors[0];\r\n\t\tthis.currentBGC = this.backgroundColors[0];\r\n\t\tthis.rays = new Rays({\r\n\t\t\tamount: 6\r\n\t\t});\r\n\t\tthis.hexagon = new RegularPolygon({\r\n\t\t\tcanvas: this.canvas,\r\n\t\t\tsides: 6,\r\n\t\t\tsize: 1000\r\n\t\t});\r\n\t\tthis.cursor = new Cursor({\r\n\t\t\tcanvas: this.canvas,\r\n\t\t\tsize: 7,\r\n\t\t\tcolor: this.wallColors[0],\r\n\t\t\tradius: 75,\r\n\t\t\tspeed: 5\r\n\t\t});\r\n\t\tthis.minDist = Math.sqrt(\r\n\t\t\tMath.pow(this.canvas.width, 2) +\r\n\t\t\tMath.pow(this.canvas.height, 2)\r\n\t\t) / 2;\r\n\t\tthis.timer = new Timer({\r\n\t\t\tself: this,\r\n\t\t\turl: 'audio/rankup.ogg'\r\n\t\t}).init(this.wallColors);\r\n\r\n\t\t/* Audio */\r\n\t\tthis.audio_bgm = null;\r\n\t\tthis.audio_start = new Audio('audio/start.ogg');\r\n\t\tthis.audio_die = new Audio('audio/die.ogg');\r\n\t\tvar _audio_ctx_ = new (window.AudioContext || window.webkitAudioContext);\r\n\t\tvar _analyser_  = _audio_ctx_.createAnalyser();\r\n\t\tvar _audio_src_ = null;\r\n\t\tvar _audio_data_ = [];\r\n\t\tvar _offset_ = 0;\r\n\t\tvar _chunk_size_ = 0;\r\n\r\n\t\t/* Other vars */\r\n\t\tvar _animation_id_,\r\n\t\t_frameCount = 0,\r\n\t\t_frameCount_levelUp = 0,\r\n\t\t_isDead = false,\r\n\t\tCOLOR_DARK = 0, COLOR_LIGHT = 1;\r\n\t\tvar _start = 0;\r\n\r\n\t\tfor (var i = 0; i < this.walls.length; i++) {\r\n\t\t\tthis.walls[i] = new Wall({\r\n\t\t\t\tdistance: this.minDist + ((this.minDist / 3) * (i + 1))\r\n\t\t\t});\r\n\t\t\tthis.walls[i].generatePattern();\r\n\t\t};\r\n\r\n\t\tthis.getAudioCtx = function() {return _audio_ctx_;}\r\n\t\tthis.setAudioCtx = function(ctx) {_audio_ctx_ = ctx;}\r\n\t\tthis.getAnalyser = function() {return _analyser_;}\r\n\t\tthis.setAnalyser = function(a) {_analyser_ = a;}\r\n\t\tthis.getAudioSrc = function() {return _audio_src_;}\r\n\t\tthis.setAudioSrc = function(src) {_audio_src_ = src;}\r\n\t\tthis.getAudioData = function() {return _audio_data_;}\r\n\t\tthis.setAudioData = function(data) {_audio_data_ = data;}\r\n\t\tthis.getChunkSize = function() {return _chunk_size_;}\r\n\t\tthis.setChunkSize = function(size) {_chunk_size_ = size;}\r\n\r\n\t\tif (typeof this.args.config === 'string') {\r\n\t\t\tKiloton.loadConfig(this.args.config, this, function() {\r\n\t\t\t\tif (this.audio_bgm)\r\n\t\t\t\t\tthis.audio_bgm.play();\r\n\t\t\t}.bind(this));\r\n\t\t}\r\n\r\n\t\tthis.init = function(callback) {\r\n\t\t\tif (typeof this.args.config === 'string') {\r\n\t\t\t\tKiloton.loadConfig(this.args.config, this, function() {\r\n\t\t\t\t\tif (Math.floor(Date.now()) % 2 == 0)\r\n\t\t\t\t\t\tthis.angleSpeed *= -1;\r\n\t\t\t\t\tthis.play();\r\n\t\t\t\t}.bind(this));\r\n\t\t\t}\telse {\r\n\t\t\t\tthis.angleSpeed = 1.2;\r\n\t\t\t\tthis.wallSpeed = 5;\r\n\t\t\t\tif (Math.floor(Date.now()) % 2 == 0)\r\n\t\t\t\t\tthis.angleSpeed *= -1;\r\n\t\t\t\tthis.play();\r\n\t\t\t}\r\n\t\t\tthis.cursor.size = 7;\r\n\t\t\tthis.timer.currentLevel = 0;\r\n\t\t\tthis.timer.levelText.innerHTML = this.timer.levelTexts[0];\r\n\t\t\t_frameCount = 0;\r\n\t\t\treturn this;\r\n\t\t};\r\n\r\n\t\tthis.play = function() {\r\n\t\t\tvar _this = this;\r\n\t\t\t_isDead = false;\r\n\t\t\tdocument.onkeydown = function(event) {\r\n\t\t\t\tvar key = event.which || event.keyCode;\r\n\t\t\t\tif (key == 27)\r\n\t\t\t\t_isDead = true;\r\n\t\t\t\t_this.moveCursor(event);\r\n\t\t\t};\r\n\t\t\tdocument.onkeyup = function(event) {\r\n\t\t\t\t_this.stopCursor(event);\r\n\t\t\t}\r\n\t\t\tthis.audio_start.play();\r\n\t\t\tsetTimeout(function() {\r\n\t\t\t\tif (this.audio_bgm && this.audio_bgm.paused)\r\n\t\t\t\t\tthis.audio_bgm.play();\r\n\t\t\t}.bind(this), 200);\r\n\t\t\tthis.canvas.classList.add('playing');\r\n\t\t\t_animation_id_ = requestAnimationFrame(_update.bind(this))\r\n\t\t};\r\n\r\n\t\tthis.moveCursor = function(event) {\r\n\t\t\tvar key = event.which || event.keyCode;\r\n\t\t\tif (key == 39)\r\n\t\t\tthis.cursor.dir = 1;\r\n\t\t\telse if (key == 37)\r\n\t\t\tthis.cursor.dir = -1;\r\n\t\t}\r\n\r\n\t\tthis.stopCursor = function(event) {\r\n\t\t\tvar key = event.which || event.keyCode;\r\n\t\t\tif ((key == 39 && this.cursor.dir == 1) || (key == 37 && this.cursor.dir == -1))\r\n\t\t\tthis.cursor.dir = 0;\r\n\t\t}\r\n\r\n\t\tthis.die = function() {\r\n\t\t\tsetTimeout(function() {\r\n\t\t\t\tif (this.audio_bgm) {\r\n\t\t\t\t\tthis.audio_bgm.pause();\r\n\t\t\t\t\tthis.audio_bgm = null;\r\n\t\t\t\t}\r\n\t\t\t}.bind(this), 200);\r\n\t\t\tthis.audio_die.play();\r\n\t\t\tthis.hexagon.draw(this.canvas, this.currentBGC[COLOR_DARK], this.currentWallColor, 7);\r\n\t\t\tthis.cursor.draw();\r\n\t\t\tthis.cursor.dir = 0;\r\n\t\t\tdocument.onkeydown = null;\r\n\t\t\tdocument.onkeyup = null;\r\n\t\t\t_frameCount = 0;\r\n\t\t\tthis.canvas.classList.remove('playing');\r\n\t\t\t_animation_id_ = requestAnimationFrame(_dead.bind(this));\r\n\t\t};\r\n\r\n\t\tthis.getInterCoef = function(frame) {\r\n\t\t\treturn (frame % 120) <= 60 ? (frame % 120) : 60 - ((frame % 120) - 60);\r\n\t\t};\r\n\r\n\t\tthis.fadeInterpolate = function() {\r\n\t\t\tthis.currentWallColor = Utils.interpolateColor(\r\n\t\t\t\tthis.currentWallColor,\r\n\t\t\t\tthis.wallColors[0],\r\n\t\t\t\t120,\r\n\t\t\t\t_frameCount - _start\r\n\t\t\t);\r\n\t\t\tthis.currentBGC = [\r\n\t\t\t\tUtils.interpolateColor(\r\n\t\t\t\t\tthis.currentBGC[COLOR_DARK],\r\n\t\t\t\t\tthis.backgroundColors[0][COLOR_DARK],\r\n\t\t\t\t\t120,\r\n\t\t\t\t\t_frameCount - _start\r\n\t\t\t\t),\r\n\t\t\t\tUtils.interpolateColor(\r\n\t\t\t\t\tthis.currentBGC[COLOR_LIGHT],\r\n\t\t\t\t\tthis.backgroundColors[0][COLOR_LIGHT],\r\n\t\t\t\t\t120,\r\n\t\t\t\t\t_frameCount - _start\r\n\t\t\t\t)\r\n\t\t\t];\r\n\t\t\tif (_frameCount - _start == 120) {\r\n\t\t\t\t_backgroundColors = this.backgroundColors;\r\n\t\t\t\t_wallColors = this.wallColors;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.colorsHasChanged = function() {\r\n\t\t\tif (this.backgroundColors != _backgroundColors || this.wallColors != _wallColors)\r\n\t\t\t\treturn true;\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tthis.interpolate = function() {\r\n\t\t\tvar _fc_acc = this.getInterCoef(_frameCount);\r\n\t\t\tif (this.colorsHasChanged()) {\r\n\t\t\t\t_start = _start < _frameCount - 120 ? _frameCount : _start;\r\n\t\t\t\tthis.fadeInterpolate();\r\n\t\t\t} else {\r\n\t\t\t\tthis.currentWallColor = Utils.interpolateColor(\r\n\t\t\t\t\tthis.wallColors[0],\r\n\t\t\t\t\tthis.wallColors[1],\r\n\t\t\t\t\t60,\r\n\t\t\t\t\t_fc_acc\r\n\t\t\t\t);\r\n\t\t\t\tthis.currentBGC = [\r\n\t\t\t\t\tUtils.interpolateColor(\r\n\t\t\t\t\t\tthis.backgroundColors[0][COLOR_DARK],\r\n\t\t\t\t\t\tthis.backgroundColors[1][COLOR_DARK],\r\n\t\t\t\t\t\t60,\r\n\t\t\t\t\t\t_fc_acc\r\n\t\t\t\t\t),\r\n\t\t\t\t\tUtils.interpolateColor(\r\n\t\t\t\t\t\tthis.backgroundColors[0][COLOR_LIGHT],\r\n\t\t\t\t\t\tthis.backgroundColors[1][COLOR_LIGHT],\r\n\t\t\t\t\t\t60,\r\n\t\t\t\t\t\t_fc_acc\r\n\t\t\t\t\t)\r\n\t\t\t\t];\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tvar _update = function() {\r\n\t\t\tvar _ending = this.timer.levelTimings[this.timer.levelTimings.length - 1];\r\n\t\t\tif (_frameCount >= (_ending * 60) && _frameCount <= ((_ending + .3) * 60)) {\r\n\t\t\t\tif (_frameCount == (_ending * 60) && typeof this.args.ending === 'string') {\r\n\t\t\t\t\tthis.audio_bgm.pause();\r\n\t\t\t\t\tthis.audio_bgm = null;\r\n\t\t\t\t\tKiloton.loadConfig(this.args.ending, this, function() {\r\n\t\t\t\t\t\tthis.audio_bgm.play();\r\n\t\t\t\t\t}.bind(this));\r\n\t\t\t\t\tfor (var i = 0; i < this.walls.length; i++) {\r\n\t\t\t\t\t\tthis.walls[i] = new Wall({\r\n\t\t\t\t\t\t\tdistance: this.minDist + ((this.minDist / 3) * (i + 8))\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tthis.walls[i].generatePattern();\r\n\t\t\t\t\t};\r\n\t\t\t\t\tthis.audio_start.play();\r\n\t\t\t\t\t_frameCount_levelUp = _frameCount;\r\n\t\t\t\t\t_frameCount = 0;\r\n\t\t\t\t}\r\n\t\t\t\tthis.ctx.fillStyle = \"#FFFFFF\";\r\n\t\t\t\tthis.ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\t\t\t\tthis.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n\t\t\t\t_frameCount++;\r\n\t\t\t\t_animation_id_ = requestAnimationFrame(_update.bind(this));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.interpolate();\r\n\r\n\t\t\tif ((_frameCount % (this.rotationFrequency * 60) == 0) && (Math.floor(Math.random() * 100)) < this.rotationChance)\r\n\t\t\tthis.angleSpeed *= -1;\r\n\r\n\t\t\tif (this.audio_bgm) {\r\n\t\t\t\t_analyser_.getByteFrequencyData(_audio_data_);\r\n\t\t\t\tvar __TEMP__ = _audio_data_.slice(_chunk_size_, _chunk_size_ * 2);\r\n\t\t\t\t_offset_ = (Utils.arrayAvg(__TEMP__) / 2);\r\n\t\t\t}\r\n\r\n\t\t\tthis.ctx.fillStyle = this.currentBGC[COLOR_DARK];\r\n\t\t\tthis.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n\t\t\tthis.ctx.translate(this.canvas.width / 2, this.canvas.height / 2);\r\n\t\t\tthis.ctx.rotate(this.angleSpeed * Math.PI / 180);\r\n\t\t\tthis.ctx.translate(- this.canvas.width / 2, - this.canvas.height / 2);\r\n\t\t\tthis.rays.draw(this.canvas, [this.currentBGC[COLOR_DARK], this.currentBGC[COLOR_LIGHT]]);\r\n\t\t\tfor (var i = 0; i < this.walls.length; i++) {\r\n\t\t\t\tthis.walls[i].draw(this.canvas, this.currentWallColor, _offset_);\r\n\t\t\t\tthis.walls[i].distance -= this.wallSpeed;\r\n\t\t\t\tif (this.walls[i].distance <= 0) {\r\n\t\t\t\t\tthis.walls[i].distance = this.minDist + (this.minDist / 3);\r\n\t\t\t\t\tthis.walls[i].generatePattern();\r\n\t\t\t\t}\r\n\t\t\t\tif (this.walls[i].checkCollision(this.cursor.getCoord(), this.canvas))\r\n\t\t\t\t_isDead = true;\r\n\t\t\t}\r\n\t\t\tthis.cursor.color = this.currentWallColor;\r\n\t\t\tthis.cursor.draw(_offset_);\r\n\t\t\tif (this.cursor.radius > 75)\r\n\t\t\tthis.cursor.radius -= 25;\r\n\t\t\tif (this.cursor.size > 7)\r\n\t\t\tthis.cursor.size -= 1;\r\n\t\t\tthis.hexagon.draw(this.currentBGC[COLOR_DARK], this.currentWallColor, 7, _offset_);\r\n\t\t\tif (this.hexagon.size > 50)\r\n\t\t\tthis.hexagon.size -= 25;\r\n\t\t\tthis.timer.update(_frameCount, this.currentWallColor, _frameCount_levelUp);\r\n\r\n\t\t\tif (_isDead)\r\n\t\t\treturn this.die();\r\n\r\n\t\t\t_frameCount++;\r\n\t\t\t_animation_id_ = requestAnimationFrame(_update.bind(this));\r\n\t\t};\r\n\r\n\t\tvar _dead = function() {\r\n\t\t\tif (this.angleSpeed > .4) {\r\n\t\t\t\tthis.angleSpeed -= .01;\r\n\t\t\t\tif (this.angleSpeed < .4)\r\n\t\t\t\tthis.angleSpeed = .4;\r\n\t\t\t}\r\n\t\t\telse if (this.angleSpeed < -.4) {\r\n\t\t\t\tthis.angleSpeed += .01;\r\n\t\t\t\tif (this.angleSpeed > -.4)\r\n\t\t\t\tthis.angleSpeed = -.4;\r\n\t\t\t}\r\n\t\t\tif (this.wallSpeed > 0)\r\n\t\t\tthis.wallSpeed = 0;\r\n\r\n\t\t\tif (_frameCount == (.5 * 60))\r\n\t\t\tthis.wallSpeed = -50;\r\n\t\t\tif (_frameCount >= (.8 * 60) && this.hexagon.size < 250) {\r\n\t\t\t\tthis.hexagon.size += 50;\r\n\t\t\t\tthis.cursor.radius += 50;\r\n\t\t\t\tthis.cursor.size += 1;\r\n\t\t\t}\r\n\t\t\tif (this.hexagon.size >= 250) {\r\n\t\t\t\tvar _this = this;\r\n\t\t\t\tcancelAnimationFrame(_animation_id_);\r\n\t\t\t\twindow.onkeydown = function(event) {\r\n\t\t\t\t\tvar key = event.which || event.keyCode;\r\n\t\t\t\t\tif (key == 32 || key == 38) {\r\n\t\t\t\t\t\tfor (var i = 0; i < _this.walls.length; i++) {\r\n\t\t\t\t\t\t\t_this.walls[i] = new Wall({\r\n\t\t\t\t\t\t\t\tdistance: _this.minDist + ((_this.minDist / 3) * (i + 1))\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t_this.walls[i].generatePattern();\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\twindow.onkeydown = null;\r\n\t\t\t\t\t\tcancelAnimationFrame(_animation_id_);\r\n\t\t\t\t\t\t_this.init(_this.play);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t};\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tthis.ctx.fillStyle = this.currentBGC[COLOR_DARK];\r\n\t\t\tthis.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n\t\t\tthis.ctx.translate(this.canvas.width / 2, this.canvas.height / 2);\r\n\t\t\tthis.ctx.rotate(this.angleSpeed * Math.PI / 180);\r\n\t\t\tthis.ctx.translate(- this.canvas.width / 2, - this.canvas.height / 2);\r\n\t\t\tthis.rays.draw(this.canvas, [this.currentBGC[COLOR_DARK], this.currentBGC[COLOR_LIGHT]]);\r\n\t\t\tfor (var i = 0; i < this.walls.length; i++) {\r\n\t\t\t\tthis.walls[i].draw(this.canvas, this.currentWallColor, _offset_);\r\n\t\t\t\tthis.walls[i].distance -= this.wallSpeed;\r\n\t\t\t\tif (this.walls[i].distance <= 0) {\r\n\t\t\t\t\tthis.walls[i].distance = this.minDist + (this.minDist / 3);\r\n\t\t\t\t\tthis.walls[i].generatePattern();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.cursor.color = _frameCount % 6 < 3 ? this.wallColors[0] : this.wallColors[1];\r\n\t\t\tthis.cursor.draw(_offset_);\r\n\r\n\t\t\tif (this.angleSpeed == 0 && _frameCount % (1 * 60) == 0) {\r\n\t\t\t\t_offset_ += 15;\r\n\t\t\t}\r\n\r\n\t\t\tif (_frameCount > (.6 * 60)) {\r\n\t\t\t\tif (_offset_ < 0) {\r\n\t\t\t\t\t_offset_ += 1;\r\n\t\t\t\t\tif (_offset_ > 0)\r\n\t\t\t\t\t_offset_ = 0;\r\n\t\t\t\t} else if (_offset_ > 0) {\r\n\t\t\t\t\t_offset_ -= 1;\r\n\t\t\t\t\tif (_offset_ < 0)\r\n\t\t\t\t\t_offset_ = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.hexagon.draw(this.currentBGC[COLOR_DARK], this.currentWallColor, 7, _offset_);\r\n\r\n\t\t\t_frameCount++;\r\n\t\t\t_animation_id_ = requestAnimationFrame(_dead.bind(this));\r\n\t\t};\r\n\r\n\t\treturn this;\r\n\t};\r\n\r\n\treturn Hexagon;\r\n}());\r\n","\"use strict\";\r\n\r\nvar Cursor;\r\n\r\nmodule.exports = Cursor = (function() {\r\n\tfunction Cursor(args) {\r\n\t\tthis.canvas = args.canvas || {};\r\n\t\tthis.color = args.color || \"#fff\";\r\n\t\tthis.size = args.size || 5;\r\n\t\tthis.radius = args.radius || 50;\r\n\t\tthis.speed = args.speed || 4;\r\n\t\tthis.dir = 0;\r\n\t\tthis.angle = 30;\r\n\r\n\t\tthis.draw = function(offset) {\r\n\t\t\tvar ctx = this.canvas.getContext('2d'),\r\n\t\t\tc_x = (this.canvas.width / 2) + ((this.radius + offset) * Math.cos(this.angle * Math.PI / 180)),\r\n\t\t\tc_y = (this.canvas.height / 2) + ((this.radius + offset) * Math.sin(this.angle * Math.PI / 180));\r\n\r\n\t\t\tthis.angle = this.angle + (this.dir * this.speed);\r\n\t\t\tif (this.angle < 0)\r\n\t\t\t\tthis.angle = 360 - this.angle;\r\n\t\t\telse if (this.angle > 360)\r\n\t\t\t\tthis.angle %= 360;\r\n\t\t\tctx.translate(c_x, c_y);\r\n\t\t\tctx.rotate(this.angle * Math.PI / 180);\r\n\t\t\tctx.translate(- c_x, - c_y);\r\n\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(c_x - this.size, c_y - this.size);\r\n\t\t\tctx.lineTo(c_x + this.size, c_y);\r\n\t\t\tctx.lineTo(c_x - this.size, c_y + this.size);\r\n\t\t\tctx.closePath();\r\n\r\n\t\t\tctx.fillStyle = this.color;\r\n\t\t\tctx.fill();\r\n\r\n\t\t\tctx.translate(c_x, c_y);\r\n\t\t\tctx.rotate(- this.angle * Math.PI / 180);\r\n\t\t\tctx.translate(- c_x, - c_y);\r\n\t\t};\r\n\r\n\t\tthis.getCoord = function() {\r\n\t\t\tvar ctx = this.canvas.getContext('2d'),\r\n\t\t\tc_x = (this.canvas.width / 2) + (this.radius * Math.cos(this.angle * Math.PI / 180)),\r\n\t\t\tc_y = (this.canvas.height / 2) + (this.radius * Math.sin(this.angle * Math.PI / 180));\r\n\r\n\t\t\treturn {\r\n\t\t\t\ta: this.angle,\r\n\t\t\t\td: this.radius + (this.size * 2),\r\n\t\t\t};\r\n\t\t};\r\n\t};\r\n\treturn Cursor;\r\n}());\r\n","\"use strict\";\r\n\r\nvar Utils = require('src/Utils');\r\n\r\nvar Kiloton = {\r\n\tloadConfig: function loadConfig(url, _this, callback) {\r\n\t\tvar data = Utils.getJSON(url, function(data) {\r\n\r\n\t\t\tif (typeof data === 'undefined') {\r\n\t\t\t\tconsole.error(\"HexagonJS @ \" + url + \": Can't get data.\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof data.game === 'undefined') {\r\n\t\t\t\tconsole.error(\"HexagonJS @ \" + url + \": \\\"game\\\" object not found.\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof data.game.music !== 'undefined') {\r\n\t\t\t\tif (!_this.audio_bgm && typeof data.game.music === 'string') {\r\n\t\t\t\t\t_this.audio_bgm = new Audio(data.game.music);\r\n\t\t\t\t\t_this.audio_bgm.volume = 0.6;\r\n\t\t\t\t\t_this.setAudioSrc(_this.getAudioCtx().createMediaElementSource(_this.audio_bgm));\r\n\t\t\t\t\t_this.getAudioSrc().connect(_this.getAnalyser());\r\n\t\t\t\t\t_this.getAudioSrc().connect(_this.getAudioCtx().destination);\r\n\t\t\t\t\t_this.setAudioData(new Uint8Array(_this.getAnalyser().frequencyBinCount));\r\n\t\t\t\t\t_this.setChunkSize(~~(_this.getAudioData().length / 3));\r\n\t\t\t\t} else\r\n\t\t\t\t\tconsole.error(\"HexagonJS @ \" + url + \": \\\"music\\\" must be a string.\");\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof data.game.musicStart === 'number') {\r\n\t\t\t\tif (data.game.musicStart >= 0) {\r\n\t\t\t\t\t_this.audio_bgm.currentTime = data.game.musicStart;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error(\"HexagonJS @ \" + url + \": \\\"musicStart\\\" must be positive.\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof data.game.angleSpeed !== 'undefined') {\r\n\t\t\t\tif (typeof data.game.angleSpeed === 'number')\r\n\t\t\t\t\t_this.angleSpeed = data.game.angleSpeed;\r\n\t\t\t\telse\r\n\t\t\t\t\tconsole.error(\"HexagonJS @ \" + url + \": \\\"angleSpeed\\\" must be a number.\");\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof data.game.wallSpeed !== 'undefined') {\r\n\t\t\t\tif (typeof data.game.wallSpeed === 'number') {\r\n\t\t\t\t\tif (data.game.wallSpeed >= 0)\r\n\t\t\t\t\t\t_this.wallSpeed = data.game.wallSpeed;\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tconsole.error(\"HexagonJS @ \" + url + \": \\\"wallSpeed\\\" must be a positive number.\");\r\n\t\t\t\t} else\r\n\t\t\t\tconsole.error(\"HexagonJS @ \" + url + \": \\\"wallSpeed\\\" must be a number.\");\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof data.game.cursorSpeed !== 'undefined') {\r\n\t\t\t\tif (typeof data.game.cursorSpeed === 'number') {\r\n\t\t\t\t\tif (data.game.cursorSpeed > 0)\r\n\t\t\t\t\t\t_this.cursor.speed = data.game.cursorSpeed;\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tconsole.error(\"HexagonJS @ \" + url + \": \\\"cursorSpeed\\\" must be a not null positive number.\");\r\n\t\t\t\t} else\r\n\t\t\t\tconsole.error(\"HexagonJS @ \" + url + \": \\\"cursorSpeed\\\" must be a number.\");\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof data.game.rotationChance !== 'undefined') {\r\n\t\t\t\tif (typeof data.game.rotationChance === 'number') {\r\n\t\t\t\t\tif (data.game.rotationChance >= 0)\r\n\t\t\t\t\t\t_this.rotationChance = data.game.rotationChance;\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tconsole.error(\"HexagonJS @ \" + url + \": \\\"rotationChance\\\" must be a positive number.\");\r\n\t\t\t\t} else\r\n\t\t\t\tconsole.error(\"HexagonJS @ \" + url + \": \\\"rotationChance\\\" must be a number.\");\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof data.game.rotationFrequency !== 'undefined') {\r\n\t\t\t\tif (typeof data.game.rotationFrequency === 'number') {\r\n\t\t\t\t\tif (data.game.rotationFrequency > 0)\r\n\t\t\t\t\t\t_this.rotationFrequency = data.game.rotationFrequency;\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tconsole.error(\"HexagonJS @ \" + url + \": \\\"rotationFrequency\\\" must be a not null positive number.\");\r\n\t\t\t\t} else\r\n\t\t\t\tconsole.error(\"HexagonJS @ \" + url + \": \\\"rotationFrequency\\\" must be a number.\");\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof data.game.backgroundColors !== 'undefined') {\r\n\t\t\t\tif (typeof data.game.backgroundColors === 'object') {\r\n\t\t\t\t\tif (data.game.backgroundColors.length == 2) {\r\n\t\t\t\t\t\tif (typeof data.game.backgroundColors[0] === 'object' &&\r\n\t\t\t\t\t\t\ttypeof data.game.backgroundColors[1] === 'object') {\r\n\t\t\t\t\t\t\tif (data.game.backgroundColors[0].length != 2 ||\r\n\t\t\t\t\t\t\t\tdata.game.backgroundColors[1].length != 2 ||\r\n\t\t\t\t\t\t\t\ttypeof data.game.backgroundColors[0][0] !== 'string' ||\r\n\t\t\t\t\t\t\t\ttypeof data.game.backgroundColors[0][1] !== 'string' ||\r\n\t\t\t\t\t\t\t\ttypeof data.game.backgroundColors[1][0] !== 'string' ||\r\n\t\t\t\t\t\t\t\ttypeof data.game.backgroundColors[1][1] !== 'string')\r\n\t\t\t\t\t\t\t\tconsole.error(\"HexagonJS @ \" + url + \": \\\"backgroundColors\\\" must contain two arrays containing two strings.\");\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t_this.backgroundColors = data.game.backgroundColors;\r\n\t\t\t\t\t\t} else\r\n\t\t\t\t\t\tconsole.error(\"HexagonJS @ \" + url + \": \\\"backgroundColors\\\" must contain arrays of strings.\");\r\n\t\t\t\t\t} else\r\n\t\t\t\t\tconsole.error(\"HexagonJS @ \" + url + \": \\\"backgroundColors\\\" must contain two values.\");\r\n\t\t\t\t} else\r\n\t\t\t\tconsole.error(\"HexagonJS @ \" + url + \": \\\"backgroundColors\\\" must be an array of arrays of strings.\");\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof data.game.wallColors !== 'undefined') {\r\n\t\t\t\tif (typeof data.game.wallColors === 'object') {\r\n\t\t\t\t\tif (data.game.wallColors.length == 2) {\r\n\t\t\t\t\t\tif (typeof data.game.wallColors[0] === 'string' &&\r\n\t\t\t\t\t\t\ttypeof data.game.wallColors[1] === 'string')\r\n\t\t\t\t\t\t\t\t_this.wallColors = data.game.wallColors;\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tconsole.error(\"HexagonJS @ \" + url + \": \\\"wallColors\\\" must contain strings.\");\r\n\t\t\t\t\t} else\r\n\t\t\t\t\tconsole.error(\"HexagonJS @ \" + url + \": \\\"wallColors\\\" must contain two values.\");\r\n\t\t\t\t} else\r\n\t\t\t\tconsole.error(\"HexagonJS @ \" + url + \": \\\"wallColors\\\" must be an array of strings.\");\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof data.game.patterns === 'object') {\r\n\t\t\t\tfor (var i = 0; i < data.game.patterns.length; i++) {\r\n\t\t\t\t\tif (typeof data.game.patterns[i] != 'object' || data.game.patterns[i].length != 6)\r\n\t\t\t\t\t\tconsole.error(\"HexagonJS @ \" + url + \": \\\"patterns\\\" must be an array of arrays of 6 booleans.\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (var i = _this.walls.length - 1; i >= 0; i--) {\r\n\t\t\t\t\t_this.walls[i].setPatterns(data.game.patterns);\r\n\t\t\t\t\t_this.walls[i].generatePattern();\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof data.events === 'object') {\r\n\t\t\t\tfor (var i = 0; i < data.events.length; i++) {\r\n\t\t\t\t\tvar body = 'try{';\r\n\t\t\t\t\tfor (var evact in data.events[i]) {\r\n\t\t\t\t\t\tif (data.events[i].hasOwnProperty(evact) && evact !== 'time') {\r\n\t\t\t\t\t\t\tif (typeof data.events[i][evact] === 'object') {\r\n\t\t\t\t\t\t\t\tif (evact === 'backgroundColors') {\r\n\t\t\t\t\t\t\t\t\tvar tmp = '[[\"';\r\n\t\t\t\t\t\t\t\t\ttmp += data.events[i][evact][0].join('\",\"');\r\n\t\t\t\t\t\t\t\t\ttmp += '\"],[\"';\r\n\t\t\t\t\t\t\t\t\ttmp += data.events[i][evact][1].join('\",\"');\r\n\t\t\t\t\t\t\t\t\ttmp += '\"]]';\r\n\t\t\t\t\t\t\t\t\tbody += 'target[\"' + evact + '\"]=' + tmp + ';';\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tvar tmp = '[\"' + data.events[i][evact].join('\",\"') + '\"]';\r\n\t\t\t\t\t\t\t\t\tbody += 'target[\"' + evact + '\"]=' + tmp + ';';\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else\r\n\t\t\t\t\t\t\t\tbody += 'target[\"' + evact + '\"]=' + data.events[i][evact] + ';';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t\tbody += '}catch(e){console.warn(\"Timed event '+data.events[i].time+' : \" + e);}';\r\n\t\t\t\t\tvar eventCallback = Function('target', body);\r\n\t\t\t\t\t_this.timer.registerEvent(data.events[i].time, eventCallback);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tif (typeof data.levels !== 'undefined')\r\n\t\t\t\t_this.timer.load(data);\r\n\r\n\t\t\tif (typeof callback === 'function')\r\n\t\t\t\tcallback();\r\n\t\t});\r\n\t}\r\n};\r\n\r\nmodule.exports = Kiloton;\r\n","\"use strict\";\r\n\r\nvar Rays;\r\n\r\nmodule.exports = Rays = (function() {\r\n\tfunction Rays(args) {\r\n\t\tthis.amount = typeof args.amount !== 'undefined' ? args.amount : 3;\r\n\r\n\t\tthis.draw = function(canvas, colors) {\r\n\t\t\tvar ctx = canvas.getContext('2d'),\r\n\t\t\tcx = canvas.width / 2,\r\n\t\t\tcy = canvas.height / 2,\r\n\t\t\tsz = canvas.width > canvas.height ? canvas.width : canvas.height;\r\n\r\n\t\t\tfor (var i = 1; i <= this.amount; i++) {\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tctx.moveTo(cx, cy);\r\n\t\t\t\tctx.lineTo(cx + sz * Math.cos(i * 2 * Math.PI / this.amount), cy + sz * Math.sin(i * 2 * Math.PI / this.amount));\r\n\t\t\t\tctx.lineTo(cx + sz * Math.cos((i+1)%this.amount * 2 * Math.PI / this.amount), cy + sz * Math.sin((i+1)%this.amount * 2 * Math.PI / this.amount));\r\n\t\t\t\tctx.fillStyle = colors[i % 2];\r\n\t\t\t\tctx.fill();\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\treturn Rays;\r\n}());\r\n","\"use strict\";\r\n\r\nvar RegularPolygon;\r\n\r\nmodule.exports = RegularPolygon = (function() {\r\n\tfunction RegularPolygon(args) {\r\n\t\tif (typeof args === \"undefined\")\r\n\t\t\tthrow new Error('RegularPolygon: No args provided');\r\n\t\tif (typeof args.canvas === 'undefined')\r\n\t\t\tthrow new Error('RegularPolygon: No target canvas provided');\r\n\t\tif (typeof args.sides !== 'undefined' && args.sides < 3)\r\n\t\t\tthrow new Error('RegularPolygon: Sides cannot be less than 3');\r\n\r\n\t\tthis.sides = args.sides\t\t|| 3,\r\n\t\tthis.size = args.size\t\t|| 10,\r\n\t\tthis.canvas = args.canvas\t|| {};\r\n\r\n\t\tthis.draw = function(fillColor, strokeColor, strokeWidth, offset) {\r\n\t\t\tvar ctx\t= this.canvas.getContext('2d'),\r\n\t\t\tcx \t= this.canvas.width / 2 || 0,\r\n\t\t\tcy \t= this.canvas.height / 2 || 0;\r\n\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(cx + (this.size + offset) * Math.cos(0), cy + this.size *  Math.sin(0));\r\n\t\t\tfor (var i = 1; i <= this.sides; i++) {\r\n\t\t\t\tctx.lineTo(cx + (this.size + offset) * Math.cos(i * 2 * Math.PI / this.sides), cy + (this.size + offset) * Math.sin(i * 2 * Math.PI / this.sides));\r\n\t\t\t};\r\n\r\n\t\t\tctx.fillStyle = fillColor;\r\n\t\t\tctx.strokeStyle = strokeColor;\r\n\t\t\tctx.lineCap = \"round\";\r\n\t\t\tctx.lineWidth = strokeWidth;\r\n\t\t\tctx.fill();\r\n\t\t\tctx.stroke();\r\n\t\t};\r\n\r\n\t};\r\n\t\r\n\treturn RegularPolygon;\r\n}());\r\n","\"use strict\";\r\n\r\nvar Utils\t= require('src/Utils');\r\n\r\nvar Timer;\r\n\r\nmodule.exports = Timer = (function() {\r\n\tfunction Timer(args) {\r\n\t\tthis.currentLevel = 0;\r\n\t\tthis.levelTimings = [10, 20, 30, 45, 60];\r\n\t\tthis.ending = this.levelTimings[this.levelTimings.length - 1];\r\n\t\tthis.levelTexts = [\"POINT\", \"LINE\", \"TRIANGLE\", \"SQUARE\", \"PENTAGON\", \"HEXAGON\"];\r\n\t\tthis.element;\r\n\t\tthis.timeText;\r\n\t\tthis.label;\r\n\t\tthis.level;\r\n\t\tthis.levelText;\r\n\t\tthis.levelProgressContainer;\r\n\t\tthis.levelProgress;\r\n\t\tthis._hexagon = args.self || null;\r\n\t\tthis.eventList = [];\r\n\r\n\t\tthis.notify = null;\r\n\t\tif (typeof args !== 'undefined' && typeof args.url !== 'undefined')\r\n\t\t\tthis.notify = new Audio(args.url);\r\n\r\n\t\tthis.load = function(data) {\r\n\t\t\tif (typeof data === 'undefined') {\r\n\t\t\t\tconsole.error(\"HexagonJS @ \" + url + \": Can't get data.\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (typeof data.levels === 'undefined') {\r\n\t\t\t\tconsole.error(\"HexagonJS @ \" + url + \": \\\"levels\\\" object not found.\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (typeof data.levels.timings === 'undefined' ||\r\n\t\t\t\ttypeof data.levels.texts === 'undefined') {\r\n\t\t\t\tconsole.error(\"HexagonJS @ \" + url + \": Missing \\\"timings\\\" or \\\"texts\\\" arrays.\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (data.levels.timings.length != data.levels.texts.length - 1) {\r\n\t\t\t\tconsole.error(\"HexagonJS @ \" + url + \": Level timings represent the end of each level. There should be one less timings than level names since the last level lasts forever.\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.levelTimings = data.levels.timings;\r\n\t\t\tthis.ending = this.levelTimings[this.levelTimings.length - 1];\r\n\t\t\tthis.levelTexts = data.levels.texts;\r\n\t\t\tthis.levelText.innerHTML = this.levelTexts[0];\r\n\t\t};\r\n\r\n\t\tthis.init = function(colors) {\r\n\t\t\tthis.element = document.createElement('div');\r\n\t\t\tthis.element.classList.add('hjs');\r\n\t\t\tthis.element.classList.add('timer');\r\n\t\t\tdocument.getElementsByTagName('body')[0].appendChild(this.element);\r\n\r\n\t\t\tthis.timeText = document.createElement('span');\r\n\t\t\tthis.element.appendChild(this.timeText);\r\n\r\n\t\t\tthis.label = document.createElement('div');\r\n\t\t\tthis.label.classList.add('hjs');\r\n\t\t\tthis.label.classList.add('label');\r\n\t\t\tthis.label.innerHTML = \"TIME\";\r\n\t\t\tthis.element.appendChild(this.label);\r\n\r\n\t\t\tthis.level = document.createElement('div');\r\n\t\t\tthis.level.classList.add('hjs');\r\n\t\t\tthis.level.classList.add('level');\r\n\t\t\tdocument.getElementsByTagName('body')[0].appendChild(this.level);\r\n\r\n\t\t\tthis.levelText = document.createElement('span');\r\n\t\t\tthis.levelText.innerHTML = this.levelTexts[0];\r\n\t\t\tthis.level.appendChild(this.levelText);\r\n\r\n\t\t\tthis.levelProgressContainer = document.createElement('div');\r\n\t\t\tthis.level.appendChild(this.levelProgressContainer);\r\n\r\n\t\t\tthis.levelProgress = document.createElement('div');\r\n\t\t\tthis.levelProgress.style.backgroundColor = colors[1];\r\n\t\t\tthis.levelProgressContainer.appendChild(this.levelProgress);\r\n\t\t\treturn this;\r\n\t\t};\r\n\r\n\t\tthis.update = function(_frameCount, color, _timeOffset) {\r\n\t\t\tif (typeof _timeOffset === 'undefined')\r\n\t\t\t\t_timeOffset = 0;\r\n\t\t\tvar seconds = Math.floor((_frameCount + _timeOffset) / 60);\r\n\t\t\tvar dec = Math.floor((_frameCount + _timeOffset) - (seconds * 60));\r\n\t\t\tdec = ('0' + dec).slice(-2);\r\n\t\t\tthis.timeText.innerHTML = seconds + ':' + dec;\r\n\r\n\t\t\tfor (var i = 0; i < this.eventList.length; i++) {\r\n\t\t\t\tif (this.eventList[i].time === _frameCount / 60)\r\n\t\t\t\t\tthis.eventList[i].callback(this._hexagon);\r\n\t\t\t}\r\n\r\n\t\t\tvar percent = (_frameCount / (this.levelTimings[this.currentLevel] * 60)) * 100;\r\n\t\t\tif (this.currentLevel > 0 && this.currentLevel < this.levelTexts.length - 1)\r\n\t\t\t\tpercent = ((_frameCount - (this.levelTimings[this.currentLevel - 1] * 60)) / ((this.levelTimings[this.currentLevel] * 60) - (this.levelTimings[this.currentLevel - 1] * 60))) * 100;\r\n\t\t\tif (this.currentLevel == this.levelTexts.length - 1)\r\n\t\t\t\tpercent = 100;\r\n\t\t\tpercent %= 101;\r\n\t\t\tthis.levelProgress.style.width = percent + '%';\r\n\t\t\tthis.levelProgress.style.backgroundColor = color;\r\n\r\n\t\t\tfor (var i = 0; i < this.levelTimings.length; i++) {\r\n\t\t\t\tif (seconds == this.levelTimings[i] && this.currentLevel == i) {\r\n\t\t\t\t\tif (i < this.levelTimings.length - 1 && this.notify != null)\r\n\t\t\t\t\t\tthis.notify.play();\r\n\t\t\t\t\tthis.currentLevel++;\r\n\t\t\t\t\tthis.levelText.innerHTML = this.levelTexts[this.currentLevel];\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t};\r\n\r\n\t\tthis.registerEvent = function(timing, callback) {\r\n\t\t\tfor (var i = 0; i < this.eventList.length; i++) {\r\n\t\t\t\tif (this.eventList[i].time == timing) {\r\n\t\t\t\t\tthis.eventList[i] = {\r\n\t\t\t\t\t\ttime: timing,\r\n\t\t\t\t\t\tcallback: callback\r\n\t\t\t\t\t};\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.eventList.push({\r\n\t\t\t\ttime: timing,\r\n\t\t\t\tcallback: callback\r\n\t\t\t});\r\n\t\t};\r\n\t};\r\n\r\n\treturn Timer;\r\n}());\r\n","\"use strict\";\r\n\r\nvar Utils = {\r\n\tinterpolateColor: function interpolateColor(minColor, maxColor, maxDepth, depth) {\r\n\t\tfunction d2h(d) {return d.toString(16);}\r\n\t\tfunction h2d(h) {return parseInt(h,16);}\r\n\r\n\t\tif (depth == 0)\r\n\t\t\treturn minColor;\r\n\t\tif (depth >= maxDepth)\r\n\t\t\treturn maxColor;\r\n\r\n\t\tvar color = \"#\";\r\n\t\tfor (var i = 1; i <= 6; i += 2) {\r\n\t\t\tvar minVal = new Number(h2d(minColor.substr(i,2)));\r\n\t\t\tvar maxVal = new Number(h2d(maxColor.substr(i,2)));\r\n\t\t\tvar nVal = minVal + (maxVal - minVal) * (depth / maxDepth);\r\n\t\t\tvar val = d2h(Math.floor(nVal));\r\n\t\t\twhile(val.length < 2){\r\n\t\t\t\tval = \"0\"+val;\r\n\t\t\t}\r\n\t\t\tcolor += val;\r\n\t\t};\r\n\t\treturn color;\r\n\t},\r\n\tgetJSON: function getJSON(url, callback) {\r\n\t\tvar xhr = typeof XMLHttpRequest != 'undefined'\r\n\t\t? new XMLHttpRequest()\r\n\t\t: new ActiveXObject('Microsoft.XMLHTTP');\r\n\t\txhr.open('get', url, true);\r\n\t\txhr.onreadystatechange = function() {\r\n\t\t\tvar status, data;\r\n\t\t\tif (xhr.readyState == 4) {\r\n\t\t\t\tstatus = xhr.status;\r\n\t\t\t\tif (status == 200) {\r\n\t\t\t\t\tdata = JSON.parse(xhr.responseText);\r\n\t\t\t\t\tcallback && callback(data);\r\n\t\t\t\t} else\r\n\t\t\t\t\tconsole.error(\"Error: \" + status);\r\n\t\t\t}\r\n\t\t};\r\n\t\txhr.send();\r\n\t},\r\n\tarrayAvg: function arrayAvg(a) {\r\n\t\tvar sum = 0;\r\n\t\tfor (var i = a.length - 1; i >= 0; i--) {\r\n\t\t\tsum += a[i];\r\n\t\t};\r\n\t\treturn sum / a.length;\r\n\t}\r\n};\r\n\r\nmodule.exports = Utils;\r\n","\"use strict\";\r\n\r\nvar Wall;\r\n\r\nmodule.exports = Wall = (function() {\r\n\tfunction Wall(args) {\r\n\t\tthis.walls = [false, false, false, false, false, false];\r\n\t\tthis.distance = args.distance || 250;\r\n\t\tthis.width = args.width || 50;\r\n\r\n\t\tvar _patterns_ = [];\r\n\t\tif (typeof args !== 'undefined' && typeof args.patterns === 'object')\r\n\t\t\t_patterns_ = args.patterns;\r\n\r\n\t\tvar _checkValid = function(walls) {\r\n\t\t\tfor (var i = 0; i < walls.length; i++) {\r\n\t\t\t\tif (walls[i] == false)\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\tthis.setPatterns = function(patterns) {\r\n\t\t\t_patterns_ = patterns;\r\n\t\t};\r\n\r\n\t\tthis.generatePattern = function() {\r\n\t\t\tif (_patterns_.length > 0) {\r\n\t\t\t\tthis.walls = _patterns_[Math.floor(Math.random() * _patterns_.length)];\r\n\t\t\t\treturn;\r\n\t\t\t};\r\n\r\n\t\t\tfor (var i = 0; i < this.walls.length; i++)\r\n\t\t\t\tthis.walls[i] = Boolean(Math.round(Math.random()));\r\n\t\t\tif (!_checkValid(this.walls))\r\n\t\t\t\tthis.generatePattern();\r\n\t\t};\r\n\r\n\t\tthis.draw = function(canvas, color, offset) {\r\n\t\t\tvar ctx = canvas.getContext('2d');\r\n\t\t\tvar cx = canvas.width / 2,\r\n\t\t\tcy = canvas.height / 2;\r\n\r\n\t\t\tfor (var i = 0; i < this.walls.length; i++) {\r\n\t\t\t\tif (!this.walls[i])\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tctx.moveTo(cx + (this.distance + offset) * Math.cos(i * 2 * Math.PI / 6), cy + (this.distance + offset) * Math.sin(i * 2 * Math.PI / 6));\r\n\t\t\t\tctx.lineTo(cx + (this.distance + offset) * Math.cos((i + 1) * 2 * Math.PI / 6), cy + (this.distance + offset) * Math.sin((i + 1) * 2 * Math.PI / 6));\r\n\t\t\t\tctx.lineTo(cx + ((this.distance + offset) - this.width) * Math.cos((i + 1) * 2 * Math.PI / 6), cy + ((this.distance + offset) - this.width) * Math.sin((i + 1) * 2 * Math.PI / 6));\r\n\t\t\t\tctx.lineTo(cx + ((this.distance + offset) - this.width) * Math.cos(i * 2 * Math.PI / 6), cy + ((this.distance + offset) - this.width) * Math.sin(i * 2 * Math.PI / 6));\r\n\t\t\t\tctx.closePath();\r\n\r\n\t\t\t\tctx.fillStyle = color;\r\n\t\t\t\tctx.strokeStyle = color;\r\n\t\t\t\tctx.lineWidth = 1;\r\n\t\t\t\tctx.fill();\r\n\t\t\t\tctx.stroke();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.checkCollision = function(coord, canvas) {\r\n\t\t\tfor (var i = 0; i < this.walls.length; i++) {\r\n\t\t\t\tvar a_1 = i * (360 / 6),\r\n\t\t\t\ta_2 = (i + 1) * (360 / 6);\r\n\t\t\t\tif (!this.walls[i])\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tif (a_1 <= coord.a && a_2 >= coord.a) {\r\n\t\t\t\t\tif ((this.distance - this.width) <= coord.d &&\r\n\t\t\t\t\t\tthis.distance >= coord.d)\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\treturn false;\r\n\t\t};\r\n\t};\r\n\r\n\treturn Wall;\r\n}());\r\n"]}